#!/usr/bin/env python3
import sys


def solve(R: int, G: int, B: int, N: int):
    r_max = N // R + 1
    g_max = N // G + 1
    ans = 0
    for i in range(r_max):
        for j in range(g_max):
            t = N - (i * R + j * G)
            if t < 0:
                break
            if t == 0:
                ans += 1
                break
            if t % B == 0:
                ans += 1
    print(ans)


    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    R = int(next(tokens))  # type: int
    G = int(next(tokens))  # type: int
    B = int(next(tokens))  # type: int
    N = int(next(tokens))  # type: int
    solve(R, G, B, N)

if __name__ == '__main__':
    main()
