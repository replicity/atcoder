#!/usr/bin/env python3
import sys


def solve(K: int, S: str, T: str):
    cards = {'1':K, '2':K, '3':K,'4':K,'5':K,'6':K,'7':K,'8':K,'9':K}
    a = {'1':0, '2':0, '3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0}
    b = {'1':0, '2':0, '3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0}
    nums = (9 * K) - 8
    for s in S[:-1]:
        a[s] = a[s] +1
        cards[s] = cards[s] -1
    for t in T[:-1]:
        b[t] = b[t] +1
        cards[t] = cards[t] -1

    # print(a)
    # print(b)
    # print(cards)
    # print(nums)

    wc = 0
    for k, v in cards.items():
        if v == 0:
            continue
        at = a.copy()
        at[k] = at[k] + 1
        ap = 0
        for ak, av in at.items():
            ap += int(ak) * (10 ** av)
        # print(ap)

        bcards = cards.copy()
        bcards[k] = bcards[k] - 1
        for bk, bv in bcards.items():
            if bv == 0:
                continue
            bt = b.copy()
            bt[bk] = bt[bk] +1
            bp = 0
            for bbk, bbv in bt.items():
                bp += int(bbk) * (10 ** bbv)
            if ap > bp:
                # print(nums, v, bv)
                # print(k, bk)
                wc += (v/nums) * (bv/(nums-1))
    print(wc)

    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    K = int(next(tokens))  # type: int
    S = next(tokens)  # type: str
    T = next(tokens)  # type: str
    solve(K, S, T)

if __name__ == '__main__':
    main()
