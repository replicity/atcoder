#!/usr/bin/env python3
import sys


def solve(N: int, A: "List[int]"):
    # xを全パターン試している解法
    # 遅い
    at = 0
    for i in range(N):
        x = A[i]
        f = False
        cl = 0
        cr = 0
        for j in range(N):
            if A[j] < x:
                if f:
                    cl = j
                    at =  max((cl - cr) * x , at)
                f = False
            else:
                if not f:
                    cr = j
                f = True
        if f:
            at =  max((N - cr) * x , at)
    print(at)

    # 左端を固定した場合にxを最小値で変化させつつ右端までの区間をすべてためす解法
    # まだまし

    # ans = 0
    # for i in range(n):
    #     x = a[i]
    #     for j in range(i, n):
    #         x = min(x, a[j])
    #         ans = max(ans, x * (j - i+1))
    # print(ans)

    return


# generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: you use the default template now. you can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    n = int(next(tokens))  # type: int
    a = [int(next(tokens)) for _ in range(n)]  # type: "list[int]"
    solve(n, a)

if __name__ == '__main__':
    main()
