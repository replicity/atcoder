#!/usr/bin/env python3
import sys


def solve(N: int, A: "List[int]", B: "List[int]"):
    l = []
    a = sum(A)
    for i in range(N):
        l.append((i, A[i]*2+ B[i]))

    l.sort(key=lambda x: x[1], reverse=True)
    ans = 0
    b = 0
    for t in l:
        ans += 1
        i = t[0]
        a -= A[i]
        b += B[i] + A[i]
        if b > a:
            break

    print(ans)

    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [int()] * (N)  # type: "List[int]"
    B = [int()] * (N)  # type: "List[int]"
    for i in range(N):
        A[i] = int(next(tokens))
        B[i] = int(next(tokens))
    solve(N, A, B)

if __name__ == '__main__':
        main()
