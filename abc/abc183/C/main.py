#!/usr/bin/env python3
import sys
import itertools


def solve(N: int, K: int, T: "List[List[int]]"):
    ans = 0
    l = []
    for i in range(N-1):
        l.append(i)

    for v in itertools.permutations(l, N-1):
        t = T[0][v[0]+1]
        for i in range(1, len(v)):
            t += T[v[i-1]+1][v[i]+1]
        t += T[v[-1]+1][0]
        if t == K:
            ans += 1
    print(ans)


    # for
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    T = [[int(next(tokens)) for _ in range(N)] for _ in range(N)]  # type: "List[List[int]]"
    solve(N, K, T)

if __name__ == '__main__':
    main()
