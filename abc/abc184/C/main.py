#!/usr/bin/env python3
import sys


def solve(r: "List[int]", s: "List[int]"):
    a = r[0]
    c = r[1]
    b = s[0]
    d = s[1]

    if a == c and b == d:
        print(0)
        return

    if (a + b) == (c + d):
        print(1)
        return

    if  (a - b) == (c - d):
        print(1)
        return

    if (abs(a - c) + abs(b - d)) <= 3:
        print(1)
        return

    # マンハッタン距離3 * 2
    if (abs(a - c) + abs(b - d)) <= 6:
        print(2)
        return

    # 斜め移動だけ
    if (a + b) % 2 == (c + d ) % 2:
        print(2)
        return

    # 右肩上がりの斜め+マンハッタン距離3
    if abs((a + b) - (c + d )) <= 3:
        print(2)
        return

    # 右肩下がりの斜め+マンハッタン距離3
    if abs((a - b) - (c - d )) <= 3:
        print(2)
        return

    print(3)

    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    r = [int()] * (2)  # type: "List[int]"
    c = [int()] * (2)  # type: "List[int]"
    for i in range(2):
        r[i] = int(next(tokens))
        c[i] = int(next(tokens))
    solve(r, c)

if __name__ == '__main__':
    main()
