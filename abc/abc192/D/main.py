#!/usr/bin/env python3
import sys

def Base_n_to_10(X, n):
  out = 0
  X = str(X)
  for i in range(1, len(str(X))+1):
    out += int(X[-i]) * (n**(i-1))
  return out

def solve(X: str, M: int):
    nums = map(int, X)
    d = max(nums)
    X = int(X)

    if X < 10:
        if X <= M:
            print(1)
        else:
            print(0)
        return

    ok = d
    ng = 10**20
    while (abs(ok- ng) > 1):
        md = (ok + ng)//2

        n = Base_n_to_10(X, md)
        if n <= M:
            ok = md
        else:
            ng = md

    print(ok - d)

    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    X = next(tokens)  # type: str
    M = int(next(tokens))  # type: int
    solve(X, M)

if __name__ == '__main__':
    main()
