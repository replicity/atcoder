#!/usr/bin/env python3
import sys


def solve(Q: int, H: int, S: int, D: int, N: int):
    N = N * 100
    ans = 0
    while N > 0:
        u = 0
        p = float('inf')
        if N >= 200:
            u = 200
            p = D
        if N >= 100 and  p >= (S *(u / 100) ):
            u = 100
            p = S
        if N >= 50 and  p >= (H *(u / 50) ):
            u = 50
            p = H
        if N >= 25 and  p >= (Q *(u / 25) ):
            u = 25
            p = Q
        ans += (N // u) * p
        N = N % u
    print(ans)


    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    Q = int(next(tokens))  # type: int
    H = int(next(tokens))  # type: int
    S = int(next(tokens))  # type: int
    D = int(next(tokens))  # type: int
    N = int(next(tokens))  # type: int
    solve(Q, H, S, D, N)

if __name__ == '__main__':
    main()
