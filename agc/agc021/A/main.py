#!/usr/bin/env python3
import sys


def solve(N: int):
    digits = len(str(N))
    if digits == 1:
        print(N)
        return
    th = 9
    for i in range(digits-2):
        th = th * 10 + 9
    th += 10 ** (digits -1)
    if th >= N:
        if th == N:
            print(9 * (digits -1)+1)
        else:
            print(9 * (digits -1))
        return
    elif str(N).count('9') == digits:
        print(9 * (digits))
        return
    elif str(N)[1:].count('9') == digits-1:
        print(9 * (digits -1) + int(str(N)[0]))
        return
    else:
        print(9 * (digits -1) + int(str(N)[0])-1)
        return




    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    solve(N)

if __name__ == '__main__':
    main()
