#!/usr/bin/env python3
import sys


def solve(A: int, B: int, C: int):
    ans = 0
    s = set()
    while True:
        if A % 2 == 1 or B % 2 == 1 or C % 2 == 1:
            print(ans)
            break
        newA =  B / 2 + C / 2
        newB =  A / 2 + C / 2
        newC =  A / 2 + B / 2
        A = newA
        B = newB
        C = newC
        ans += 1
        n = ','.join(map(str, [A, B, C]))
        if n in s:
            print("-1")
            break
        s.add(n)

    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    A = int(next(tokens))  # type: int
    B = int(next(tokens))  # type: int
    C = int(next(tokens))  # type: int
    solve(A, B, C)

if __name__ == '__main__':
    main()
